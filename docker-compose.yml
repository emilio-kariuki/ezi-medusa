services:
  backend:
    build:
      dockerfile: dockerfile.prod
    image: backend:latest
    container_name: medusa-server
    restart: always
    depends_on:
      - postgres
      - redis
    environment:
      DATABASE_URL: postgresql://ezitech_user:yBAKOzXTzOSUJP1N0bPqPTpW8QhhWOhV@dpg-csda8mpu0jms73b9gm1g-a.oregon-postgres.render.com/ezitech?sslmode=require
      NODE_ENV: production
      JWT_SECRET: ecoville
      COOKIE_SECRET: ecoville
      REDIS_URL: redis://:redispassword@84.247.174.84:6380
      STORE_CORS: http://localhost
    ports:
      - "9000:9000"

  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: ezitech
      POSTGRES_PASSWORD: ecoville
      POSTGRES_DB: ezitech
    networks:
      - ezinetwork
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis
    command: ["redis-server", "--requirepass", "redispassword"]
    environment:
      - REDIS_PASSWORD=redispassword
    ports:
      - "6380:6380"
    networks:
      - ezietwork
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  ezietwork:
    driver: bridge